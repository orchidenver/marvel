{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","fitDescription","description","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","nextChar","clearInterval","timerId","this","setInterval","errorMessage","spinner","content","onClick","mjolnir","Component","View","CharList","charList","newItemsLoading","charEnded","itemRefs","initialLoadChars","onCharListLoading","onCharListLoaded","newCharList","isEnded","length","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderItems","array","i","imgStyle","tabIndex","props","onSelectedChar","onKeyPress","e","key","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","comicsList","comic","ErrorBoundary","info","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73a9e6dc.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","\r\n\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=ab2b21b125345293e506596e2a74051b';\r\n    _baseOffset = '210';\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        const fitDescription = char.description ? `${char.description.slice(0, 210)}...` : 'Info coming soon...';\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: fitDescription,\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    // Проставляємо шлях з папки public ТІЛЬКИ ТАК process.env.PUBLIC_URL + '/error.gif'\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt=\"error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        // Оновлюємо дані коли конструюється клас\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 3000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    // прибераємо спінер\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false });\n    }\n\n    // додаємо спінер\n    onCharLoading = () => {\n        this.setState({ loading: true });\n    }\n\n    // додаємо помилку\n    onError = () => {\n        this.setState({ loading: false, error: true });\n    }\n\n    // рендеремо персонажа\n    updateChar = () => {\n        this.onCharLoading();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    }\n\n    // наступний персонаж на кліком\n    nextChar = () => {\n        clearInterval(this.timerId);\n        this.updateChar();\n    }\n\n    render() {\n\n        const { char, loading, error } = this.state;\n        // створюємо помилку\n        const errorMessage = error ? <ErrorMessage /> : null;\n        // створюємо спінер\n        const spinner = loading ? <Spinner /> : null;\n        // умова відображення контенту\n        // якщо немає або помилки, або спінеру:\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.nextChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\n// Виокремлюємо у окремий компонент блок, котрий відповідає за рендеринг даних\n// Він не виконує ніяких логічних дій/розрахувань \nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    itemRefs = [];\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.initialLoadChars();\n    }\n\n    initialLoadChars = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n    }\n\n    // Змінюємо інтерфейс при завантаженні даних\n    onCharListLoading = () => {\n        this.setState({ newItemsLoading: true });\n    }\n\n    // Додаємо елементи при пагінації у стейт charList\n    onCharListLoaded = (newCharList) => {\n        let isEnded = false;\n        if (newCharList.length < 9) isEnded = true\n\n        this.setState(({ charList, offset }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9, // дозавантажуємо 9 елементів\n            charEnded: isEnded, // для блокування завантаження, коли немає чого вантажити\n        }));\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true });\n    }\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems = (array) => {\n\n        const items = array.map((item, i) => {\n            const { id, thumbnail, name } = item;\n            let imgStyle = { 'objectFit': 'cover' };\n\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') imgStyle = { 'objectFit': 'unset' };\n            // https://developer.mozilla.org/ru/docs/Web/HTML/Global_attributes/tabindex\n            return (\n                <li\n                    key={id}\n                    tabIndex={0}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onSelectedChar(id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onSelectedChar(id);\n                            this.focusOnItem(i);\n                        }\n                    }}\n                    className=\"char__item\">\n                    <img src={thumbnail} alt={name} style={imgStyle} />\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const { charList, loading, error, newItemsLoading, offset, charEnded } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? this.renderItems(charList) : null;\n\n        // style={{ 'display': charEnded ? 'none' : 'block' }} - якщо білше немає чого вантажити\n        return (\n            <div className=\"char__list\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <button\n                    disabled={newItemsLoading}\n                    onClick={() => this.initialLoadChars(offset)}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func.isRequired\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton';\n\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    // Коли оновлюється стейт - запускається рендер\n    // Після ренжеру може запуститися componentDidUpdate\n    // При отриманні провсів перевіряємо, чи оновилися вони\n    // Якщо оновилися - оновлюємо компонент \n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) this.updateChar();\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n\n        if (!charId) return;\n\n        this.onCharLoading();\n\n        this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false });\n    }\n\n    onCharLoading = () => {\n        this.setState({ loading: true });\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true });\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        // Робимо заглушку\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !loading && !error && char ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { 'objectFit': 'cover' };\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') imgStyle = { 'objectFit': 'unset' };\n\n    const comicsList = comics.map((comic, i) => {\n        // використовуємо ключем і, тому що комікси динамічно рендеритися не будуть\n        if (i < 10) {\n            return (\n                <li key={i} className=\"char__comics-item\">\n                    {comic.name}\n                </li>\n            )\n        }\n    });\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={imgStyle} src={thumbnail} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comicsList.length === 0 ? 'Seems like the character has no comics list...' : comicsList}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // Тільки для оновлення стейту. Після оновлення стейту\r\n    // можна додатково рендерити UI у іншому методі за умови того,\r\n    // що в стейт ми вже встановили помилку\r\n    static getDerivedStateFromError(error) {\r\n        return { error: true };\r\n    }\r\n\r\n    // Тількт для того, щоб протоколювати помилку (згідно документації реакту)\r\n    componentDidCatch(error, info) {\r\n        this.setState({ error: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onSelectedChar = (id) => {\n        this.setState({ selectedChar: id })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onSelectedChar={this.onSelectedChar} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}